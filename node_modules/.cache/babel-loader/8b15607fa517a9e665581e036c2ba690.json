{"ast":null,"code":"import _slicedToArray from \"/home/odin/Desktop/pubg--tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/odin/Desktop/pubg--tracker/src/views/Player.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NavigatorSolid from '../components/NavigatorSolid';\nexport default function Player(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFound = _useState2[0],\n        setNotFound = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _props$match$params = props.match.params,\n        username = _props$match$params.username,\n        platform = _props$match$params.platform;\n\n  const handleClick = path => {\n    props.history.push(\"/leaderboards/\".concat(path));\n  };\n\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/players', {\n          platform,\n          username\n        });\n        setUser(res.data);\n      } catch (err) {\n        setNotFound(true);\n      }\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(NavigatorSolid, {\n    solid: true,\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), notFound ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"404 Player not found\") : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Player Found\"));\n}","map":{"version":3,"sources":["/home/odin/Desktop/pubg--tracker/src/views/Player.js"],"names":["React","useEffect","useState","axios","NavigatorSolid","Player","props","notFound","setNotFound","user","setUser","match","params","username","platform","handleClick","path","history","push","res","post","data","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACJJ,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,QAC7BK,QAD6B;AAAA,QACnBC,WADmB;;AAAA,qBAEZN,QAAQ,EAFI;AAAA;AAAA,QAE7BO,IAF6B;AAAA,QAEvBC,OAFuB;;AAAA,8BAGLJ,KAAK,CAACK,KAAN,CAAYC,MAHP;AAAA,QAG5BC,QAH4B,uBAG5BA,QAH4B;AAAA,QAGlBC,QAHkB,uBAGlBA,QAHkB;;AAKpC,QAAMC,WAAW,GAAGC,IAAI,IAAI;AAC1BV,IAAAA,KAAK,CAACW,OAAN,CAAcC,IAAd,yBAAoCF,IAApC;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd;;AAAC,KAAC,YAAY;AACZ,UAAI;AACF,cAAMkB,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,mCAAX,EAAgD;AAChEN,UAAAA,QADgE;AAEhED,UAAAA;AAFgE,SAAhD,CAAlB;AAIAH,QAAAA,OAAO,CAACS,GAAG,CAACE,IAAL,CAAP;AACD,OAND,CAME,OAAOC,GAAP,EAAY;AACZd,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAVA,IADa,CAYd;;AACD,GAbQ,EAaN,EAbM,CAAT;AAcA,SACE,0CACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,IAAvB;AAA6B,IAAA,WAAW,EAAEO,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,GAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAF9C,CADF;AAMD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport NavigatorSolid from '../components/NavigatorSolid'\n\nexport default function Player(props) {\n  const [notFound, setNotFound] = useState(false)\n  const [user, setUser] = useState()\n  const { username, platform } = props.match.params\n\n  const handleClick = path => {\n    props.history.push(`/leaderboards/${path}`)\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/players', {\n          platform,\n          username\n        })\n        setUser(res.data)\n      } catch (err) {\n        setNotFound(true)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <>\n      <NavigatorSolid solid={true} handleClick={handleClick} />\n      {notFound ? <h1>404 Player not found</h1> : <h1>Player Found</h1>}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}