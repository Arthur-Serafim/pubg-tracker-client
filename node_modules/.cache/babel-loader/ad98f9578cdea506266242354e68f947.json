{"ast":null,"code":"import _slicedToArray from \"/home/odin/Desktop/pubg--tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/odin/Desktop/pubg--tracker/src/views/Player.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NavigatorSolid from '../components/NavigatorSolid';\nimport { Container, View, PlayerHeader, PlayerName, ModeSelector, ModeOption, PlayerStats, PlayerHistory } from './PlayerStyles';\nexport default function Player(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFound = _useState2[0],\n        setNotFound = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loaded = _useState6[0],\n        setLoaded = _useState6[1];\n\n  const _useState7 = useState('solo'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        gamemode = _useState8[0],\n        setGamemode = _useState8[1];\n\n  const _props$match$params = props.match.params,\n        username = _props$match$params.username,\n        platform = _props$match$params.platform;\n\n  const handleClick = path => {\n    props.history.push(\"/leaderboards/\".concat(path));\n  };\n\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/players', {\n          platform,\n          username\n        });\n        console.log(res.data.attributes);\n        setUser(res.data.attributes);\n        setLoaded(true);\n      } catch (err) {\n        setNotFound(true);\n        setLoaded(true);\n      }\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const handleGamemodeChange = e => {\n    setGamemode(e);\n    console.log(e);\n  };\n\n  if (loaded) {\n    const stats = ['kills', 'wins', 'losses'];\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(NavigatorSolid, {\n      solid: true,\n      handleClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, notFound ? React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"404 Player not found\")) : React.createElement(React.Fragment, null, React.createElement(PlayerHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(PlayerName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, user.name), React.createElement(ModeSelector, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ModeOption, {\n      active: gamemode === 'solo',\n      onClick: () => handleGamemodeChange('solo'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"SOLO\"), React.createElement(ModeOption, {\n      active: gamemode === 'solo-fpp',\n      onClick: () => handleGamemodeChange('solo-fpp'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"SOLO FPP\"), React.createElement(ModeOption, {\n      active: gamemode === 'duo',\n      onClick: () => handleGamemodeChange('duo'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"DUO\"), React.createElement(ModeOption, {\n      active: gamemode === 'duo-fpp',\n      onClick: () => handleGamemodeChange('duo-fpp'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"DUO FPP\"), React.createElement(ModeOption, {\n      active: gamemode === 'squad',\n      onClick: () => handleGamemodeChange('squad'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"SQUAD\"), React.createElement(ModeOption, {\n      active: gamemode === 'squad-fpp',\n      onClick: () => handleGamemodeChange('squad-fpp'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"SQUAD FPP\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, stats.map(stat => React.createElement(PlayerStats, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(PlayerHistory, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, stat), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, user.stats.attributes.gameModeStats[gamemode][stat]))))))));\n  } else {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(NavigatorSolid, {\n      solid: true,\n      handleClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n}","map":{"version":3,"sources":["/home/odin/Desktop/pubg--tracker/src/views/Player.js"],"names":["React","useEffect","useState","axios","NavigatorSolid","Container","View","PlayerHeader","PlayerName","ModeSelector","ModeOption","PlayerStats","PlayerHistory","Player","props","notFound","setNotFound","user","setUser","loaded","setLoaded","gamemode","setGamemode","match","params","username","platform","handleClick","path","history","push","res","post","console","log","data","attributes","err","handleGamemodeChange","e","stats","name","map","stat","gameModeStats"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport NavigatorSolid from '../components/NavigatorSolid'\nimport { \n  Container, \n  View, \n  PlayerHeader, \n  PlayerName, \n  ModeSelector, \n  ModeOption, \n  PlayerStats, \n  PlayerHistory \n} from './PlayerStyles'\n\nexport default function Player(props) {\n  const [notFound, setNotFound] = useState(false)\n  const [user, setUser] = useState()\n  const [loaded, setLoaded] = useState()\n  const [gamemode, setGamemode] = useState('solo')\n\n  const { username, platform } = props.match.params\n\n  const handleClick = path => {\n    props.history.push(`/leaderboards/${path}`)\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/players', {\n          platform,\n          username\n        })\n        console.log(res.data.attributes)\n        setUser(res.data.attributes)\n        setLoaded(true)\n      } catch (err) {\n        setNotFound(true)\n        setLoaded(true)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleGamemodeChange = e => {\n    setGamemode(e)\n    console.log(e)\n  }\n\n  if (loaded) {\n    const stats = ['kills', 'wins', 'losses']\n    return (\n      <Container>\n        <NavigatorSolid solid={true} handleClick={handleClick} />\n        <View>\n          {notFound ? (\n            <>\n              <h1>404 Player not found</h1>\n            </>\n          ) : (\n            <>\n              <PlayerHeader>\n                <PlayerName>{user.name}</PlayerName>\n                <ModeSelector>\n                  <ModeOption active={gamemode === 'solo'} onClick={() => handleGamemodeChange('solo')}>\n                    SOLO\n                  </ModeOption>\n                  <ModeOption active={gamemode === 'solo-fpp'} onClick={() => handleGamemodeChange('solo-fpp')}>\n                    SOLO FPP\n                  </ModeOption>\n                  <ModeOption active={gamemode === 'duo'} onClick={() => handleGamemodeChange('duo')}>\n                    DUO\n                  </ModeOption>\n                  <ModeOption active={gamemode === 'duo-fpp'} onClick={() => handleGamemodeChange('duo-fpp')}>\n                    DUO FPP\n                  </ModeOption>\n                  <ModeOption active={gamemode === 'squad'} onClick={() => handleGamemodeChange('squad')}>\n                    SQUAD\n                  </ModeOption>\n                  <ModeOption active={gamemode === 'squad-fpp'} onClick={() => handleGamemodeChange('squad-fpp')}>\n                    SQUAD FPP\n                  </ModeOption>\n                </ModeSelector>\n              </PlayerHeader>\n              <div>\n                {stats.map(stat => (\n                  <PlayerStats>\n                    <PlayerHistory>\n                      <span>\n                        {stat}\n                      </span>\n                      <span>\n                        {user.stats.attributes.gameModeStats[gamemode][stat]}\n                      </span>\n                    </PlayerHistory>\n                  </PlayerStats>\n                ))}\n              </div>\n            </>\n          )}\n        </View>\n      </Container>\n    )\n  } else {\n    return (\n      <Container>\n        <NavigatorSolid solid={true} handleClick={handleClick} />\n        <View />\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}