{"ast":null,"code":"import _slicedToArray from \"/home/odin/Desktop/pubg-tracker-api/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/odin/Desktop/pubg-tracker-api/client/src/views/Leaderboards.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navigator from '../components/NavigatorSolid';\nimport Footer from '../components/Footer';\nimport { Container, View, PlayerHeader, PlayerName, ModeSelector, ModeOption, PlayerStats, PlayerHistory, NameRank, UserName } from './LeaderboardsStyles';\nexport default function Leaderboards(props) {\n  let gameMode = props.match.params.game_mode;\n\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      leaderboards = _useState2[0],\n      setLeaderboards = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  const modes = ['solo', 'solo-fpp', 'duo', 'duo-fpp', 'squad', 'squad-fpp'];\n\n  const handleClick = path => {\n    props.history.push(\"/leaderboards/\".concat(path));\n  };\n\n  const handleUser = user => {\n    props.history.push(\"/steam/\".concat(user));\n  };\n\n  useEffect(() => {\n    if (!modes.includes(gameMode)) {\n      props.history.push('/');\n    }\n\n    setLoaded(false);\n\n    (async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/leaderboards', {\n          game_mode: gameMode\n        });\n        console.log(res.data);\n        setLeaderboards(res.data);\n        setLoaded(true);\n      } catch (err) {\n        setLoaded(true);\n      }\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [gameMode]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Navigator, {\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(PlayerHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(PlayerName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Leaderboards\"), React.createElement(ModeSelector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, modes.map(mode => React.createElement(ModeOption, {\n    active: gameMode === mode,\n    onClick: () => handleClick(mode),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, mode)))), loaded ? React.createElement(PlayerStats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, leaderboards.map(user => React.createElement(PlayerHistory, {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(NameRank, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, user.attributes.rank), React.createElement(UserName, {\n    onClick: () => handleUser(user.attributes.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, user.attributes.name)), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, user.attributes.stats.killDeathRatio.toFixed(2), \" KD\")))) : React.createElement(PlayerStats, {\n    loading: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/odin/Desktop/pubg-tracker-api/client/src/views/Leaderboards.js"],"names":["React","useEffect","useState","axios","Navigator","Footer","Container","View","PlayerHeader","PlayerName","ModeSelector","ModeOption","PlayerStats","PlayerHistory","NameRank","UserName","Leaderboards","props","gameMode","match","params","game_mode","leaderboards","setLeaderboards","loaded","setLoaded","modes","handleClick","path","history","push","handleUser","user","includes","res","post","console","log","data","err","map","mode","Math","random","attributes","rank","name","stats","killDeathRatio","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Navigator from '../components/NavigatorSolid'\nimport Footer from '../components/Footer'\nimport {\n  Container,\n  View,\n  PlayerHeader,\n  PlayerName,\n  ModeSelector,\n  ModeOption,\n  PlayerStats,\n  PlayerHistory,\n  NameRank,\n  UserName\n} from './LeaderboardsStyles'\n\nexport default function Leaderboards(props) {\n  let gameMode = props.match.params.game_mode\n  let [leaderboards, setLeaderboards] = useState([])\n  let [loaded, setLoaded] = useState(false)\n\n  const modes = ['solo', 'solo-fpp', 'duo', 'duo-fpp', 'squad', 'squad-fpp',]\n\n  const handleClick = path => {\n    props.history.push(`/leaderboards/${path}`)\n  }\n\n  const handleUser = user => {\n    props.history.push(`/steam/${user}`)\n  }\n\n  useEffect(() => {\n    if(!modes.includes(gameMode)) {\n      props.history.push('/')\n    }\n    setLoaded(false)\n    ;(async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/leaderboards', {\n          game_mode: gameMode\n        })\n        console.log(res.data)\n        setLeaderboards(res.data)\n        setLoaded(true)\n      } catch (err) {\n        setLoaded(true)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameMode])\n\n  return (\n    <Container>\n      <Navigator handleClick={handleClick}/>\n      <View>\n        <PlayerHeader>\n          <PlayerName>Leaderboards</PlayerName>\n          <ModeSelector>\n            {modes.map(mode => (\n              <ModeOption\n                active={gameMode === mode}\n                onClick={() => handleClick(mode)}>\n                {mode}\n              </ModeOption>\n            ))}\n          </ModeSelector>\n        </PlayerHeader>\n          {loaded ? (\n            <PlayerStats>\n              {leaderboards.map(user => (\n                <PlayerHistory key={Math.random()}>\n                  <NameRank>\n                    <span>{user.attributes.rank}</span>\n                    <UserName onClick={() => handleUser(user.attributes.name)}>{user.attributes.name}</UserName>\n                  </NameRank>\n                  <span>{user.attributes.stats.killDeathRatio.toFixed(2)} KD</span>\n                </PlayerHistory>\n              ))}\n            </PlayerStats>\n          ) : (\n            <PlayerStats loading>            \n              <div className=\"loading\"></div>\n            </PlayerStats>\n          )}\n      </View>\n      <Footer />\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}