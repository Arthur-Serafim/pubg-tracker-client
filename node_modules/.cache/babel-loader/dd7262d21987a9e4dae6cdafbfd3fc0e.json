{"ast":null,"code":"import _slicedToArray from \"/home/odin/Desktop/pubg--tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/odin/Desktop/pubg--tracker/src/views/Player.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport NavigatorSolid from '../components/NavigatorSolid';\nimport Footer from '../components/Footer';\nimport { Container, View, PlayerHeader, PlayerName, ModeSelector, ModeOption, PlayerStats, PlayerHistory } from './PlayerStyles';\nexport default function Player(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFound = _useState2[0],\n        setNotFound = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loaded = _useState6[0],\n        setLoaded = _useState6[1];\n\n  const _useState7 = useState('solo'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        gamemode = _useState8[0],\n        setGamemode = _useState8[1];\n\n  const _props$match$params = props.match.params,\n        username = _props$match$params.username,\n        platform = _props$match$params.platform;\n\n  const handleClick = path => {\n    props.history.push(\"/leaderboards/\".concat(path));\n  };\n\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const res = await axios.post('https://murmuring-lowlands-38302.herokuapp.com/api/players', {\n          platform,\n          username\n        });\n        setUser(res.data.attributes);\n        setLoaded(true);\n      } catch (err) {\n        setNotFound(true);\n        setLoaded(true);\n      }\n    })(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const handleGamemodeChange = e => {\n    setGamemode(e);\n  };\n\n  if (loaded) {\n    const stats = ['assists', 'kills', 'dailyKills', 'weeklyKills', 'teamKills', 'headshotKills', 'wins', 'dailyWins', 'weeklyWins', 'losses', 'top10s', 'roundsPlayed'];\n    const modes = ['solo', 'solo-fpp', 'duo', 'duo-fpp', 'squad', 'squad-fpp'];\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(NavigatorSolid, {\n      solid: true,\n      handleClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, notFound ? React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"404 Player not found\")) : React.createElement(React.Fragment, null, React.createElement(PlayerHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(PlayerName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, user.name), React.createElement(ModeSelector, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, modes.map(mode => React.createElement(ModeOption, {\n      active: gamemode === mode,\n      onClick: () => handleGamemodeChange(mode),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, mode)))), React.createElement(PlayerStats, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, stats.map(stat => React.createElement(PlayerHistory, {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, stat), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, user.stats.attributes.gameModeStats[gamemode][stat])))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(NavigatorSolid, {\n      solid: true,\n      handleClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n}","map":{"version":3,"sources":["/home/odin/Desktop/pubg--tracker/src/views/Player.js"],"names":["React","useEffect","useState","axios","NavigatorSolid","Footer","Container","View","PlayerHeader","PlayerName","ModeSelector","ModeOption","PlayerStats","PlayerHistory","Player","props","notFound","setNotFound","user","setUser","loaded","setLoaded","gamemode","setGamemode","match","params","username","platform","handleClick","path","history","push","res","post","data","attributes","err","handleGamemodeChange","e","stats","modes","name","map","mode","stat","Math","random","gameModeStats"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport NavigatorSolid from '../components/NavigatorSolid'\nimport Footer from '../components/Footer'\nimport {\n  Container,\n  View,\n  PlayerHeader,\n  PlayerName,\n  ModeSelector,\n  ModeOption,\n  PlayerStats,\n  PlayerHistory\n} from './PlayerStyles'\n\nexport default function Player(props) {\n  const [notFound, setNotFound] = useState(false)\n  const [user, setUser] = useState()\n  const [loaded, setLoaded] = useState()\n  const [gamemode, setGamemode] = useState('solo')\n\n  const { username, platform } = props.match.params\n\n  const handleClick = path => {\n    props.history.push(`/leaderboards/${path}`)\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const res = await axios.post('https://murmuring-lowlands-38302.herokuapp.com/api/players', {\n          platform,\n          username\n        })\n        setUser(res.data.attributes)\n        setLoaded(true)\n      } catch (err) {\n        setNotFound(true)\n        setLoaded(true)\n      }\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleGamemodeChange = e => {\n    setGamemode(e)\n  }\n\n  if (loaded) {\n    const stats = [\n      'assists',\n      'kills',\n      'dailyKills',\n      'weeklyKills',\n      'teamKills',\n      'headshotKills',\n      'wins',\n      'dailyWins',\n      'weeklyWins',\n      'losses',\n      'top10s',\n      'roundsPlayed'\n    ]\n\n    const modes = ['solo', 'solo-fpp', 'duo', 'duo-fpp', 'squad', 'squad-fpp',]\n\n\n    return (\n      <Container>\n        <NavigatorSolid solid={true} handleClick={handleClick} />\n        <View>\n          {notFound ? (\n            <>\n              <h1>404 Player not found</h1>\n            </>\n          ) : (\n            <>\n              <PlayerHeader>\n                <PlayerName>{user.name}</PlayerName>\n                <ModeSelector>\n                  {modes.map(mode => (\n                    <ModeOption\n                      active={gamemode === mode}\n                      onClick={() => handleGamemodeChange(mode)}>\n                      {mode}\n                    </ModeOption>\n                  ))}\n                </ModeSelector>\n              </PlayerHeader>\n              <PlayerStats>\n                {stats.map(stat => (\n                  <PlayerHistory key={Math.random()}>\n                    <span>{stat}</span>\n                    <span>\n                      {user.stats.attributes.gameModeStats[gamemode][stat]}\n                    </span>\n                  </PlayerHistory>\n                ))}\n              </PlayerStats>\n            </>\n          )}\n        </View>\n        <Footer />\n      </Container>\n    )\n  } else {\n    return (\n      <Container>\n        <NavigatorSolid solid={true} handleClick={handleClick} />\n        <View>\n          <div className=\"loading\" />\n        </View>\n        <Footer />\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}