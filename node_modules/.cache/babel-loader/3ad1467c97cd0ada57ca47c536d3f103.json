{"ast":null,"code":"import _slicedToArray from \"/home/odin/Desktop/pubg--tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/odin/Desktop/pubg--tracker/src/views/Player.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function Player(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        notFound = _useState2[0],\n        setNotFound = _useState2[1];\n\n  const _props$match$params = props.match.params,\n        username = _props$match$params.username,\n        platform = _props$match$params.platform;\n  useEffect(() => {\n    ;\n\n    (async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/players', {\n          platform,\n          username\n        });\n        console.log(res);\n      } catch (err) {\n        setNotFound(true);\n      }\n    })();\n  }, [platform, props.history, username]);\n\n  if (notFound) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"404 Player not found\");\n  } else {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Player Found\");\n  }\n}","map":{"version":3,"sources":["/home/odin/Desktop/pubg--tracker/src/views/Player.js"],"names":["React","useEffect","useState","axios","Player","props","notFound","setNotFound","match","params","username","platform","res","post","console","log","err","history"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACJH,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,QAC7BI,QAD6B;AAAA,QACnBC,WADmB;;AAAA,8BAELF,KAAK,CAACG,KAAN,CAAYC,MAFP;AAAA,QAE5BC,QAF4B,uBAE5BA,QAF4B;AAAA,QAElBC,QAFkB,uBAElBA,QAFkB;AAIpCV,EAAAA,SAAS,CAAC,MAAM;AACd;;AAAC,KAAC,YAAY;AACZ,UAAI;AACF,cAAMW,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,mCAAX,EAAgD;AAChEF,UAAAA,QADgE;AAEhED,UAAAA;AAFgE,SAAhD,CAAlB;AAIAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,OAND,CAME,OAAOI,GAAP,EAAY;AACZT,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAVA;AAWF,GAZQ,EAYN,CAACI,QAAD,EAAWN,KAAK,CAACY,OAAjB,EAA0BP,QAA1B,CAZM,CAAT;;AAcA,MAAIJ,QAAJ,EAAc;AACZ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAGD,GAJD,MAIO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;AACF","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport default function Player(props) {\n  const [notFound, setNotFound] = useState(false)\n  const { username, platform } = props.match.params\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/players', {\n          platform,\n          username\n        })\n        console.log(res)\n      } catch (err) {\n        setNotFound(true)\n      }\n    })()\n  }, [platform, props.history, username])\n\n  if (notFound) {\n    return (\n      <h1>404 Player not found</h1>\n    )\n  } else {\n    return <h1>Player Found</h1>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}